DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS publish CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS publish_compilations CASCADE;
DROP TABLE IF EXISTS canceling_or_delete_reason CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    categories_name varchar(100) UNIQUE,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE  IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat numeric(20, 15),
    lon numeric(20, 15),
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS publish (
      id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      annotation varchar(1000),
      category_id bigint,
      confirmed_requests int,
      created_on TIMESTAMP WITHOUT TIME ZONE,
      description varchar(2000),
      event_date TIMESTAMP WITHOUT TIME ZONE,
      initiator_id bigint,
      location_id bigint,
      paid boolean,
      participant_limit int,
      published_on TIMESTAMP WITHOUT TIME ZONE,
      request_moderation boolean,
      state SMALLINT,
      title varchar(1000),
      views int,
      CONSTRAINT pk_publish PRIMARY KEY (id),
      CONSTRAINT fk_publish_users FOREIGN KEY (initiator_id) REFERENCES users,
      CONSTRAINT fk_publish_categories FOREIGN KEY (category_id) REFERENCES categories,
      CONSTRAINT fk_publish_locations FOREIGN KEY (location_id) REFERENCES locations
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id bigint,
    requester_id bigint,
    status SMALLINT,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests_users FOREIGN KEY (requester_id) REFERENCES users,
    CONSTRAINT fk_requests_publish FOREIGN KEY (event_id) REFERENCES publish ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned boolean,
    title varchar(200),
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS publish_compilations (
    publish_id bigint REFERENCES publish(id),
    compilations_id bigint REFERENCES compilations(id),
    CONSTRAINT pk_publish_compilations PRIMARY KEY (publish_id, compilations_id)
);

CREATE TABLE IF NOT EXISTS  canceling_or_delete_reason (
      id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      reason_name varchar(200) UNIQUE,
      CONSTRAINT pk_reason PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description varchar(2000),
    publish_id bigint,
    author_id bigint,
    created TIMESTAMP WITHOUT TIME ZONE,
    canceling_reason_id bigint,
    status SMALLINT,
    CONSTRAINT pk_сomment PRIMARY KEY (id),
    CONSTRAINT fk_publish_сomment FOREIGN KEY (publish_id) REFERENCES publish ON DELETE CASCADE,
    CONSTRAINT fk_users_сomment FOREIGN KEY (author_id) REFERENCES users,
    CONSTRAINT fk_reason_сomment FOREIGN KEY (canceling_reason_id) REFERENCES canceling_or_delete_reason
);

INSERT INTO canceling_or_delete_reason (reason_name) VALUES ('Без объяснения причин.'), ('Ненормативная лексика'),
                                                             ('Комментарий не относится к теме публикации'),
                                                             ('Реклама'), ('Нарушение правил сервиса');
